@import "tailwindcss";
/* @import url('https://fonts.googleapis.com/css2?family=Noto+Sans+JP&display=swap'); */
@import url("https://fonts.googleapis.com/css2?family=M+PLUS+Rounded+1c&display=swap");

@config '../../tailwind.config.ts';

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@theme {
  --color-primary-50: #f8fafc;
  --color-primary-100: #f1f5f9;
  --color-primary-200: #e2e8f0;
  --color-primary-300: #cbd5e1;
  --color-primary-400: #94a3b8;
  --color-primary-500: #64748b;
  --color-primary-600: #475569;
  --color-primary-700: #334155;
  --color-primary-800: #1e293b;
  --color-primary-900: #0f172a;
  --color-primary-950: #020617;
}

@layer utilities {
  .h-calc {
    height: calc(100vh - var(--height));
  }
}

body {
  /* font-family: "Noto Sans JP", sans-serif; */
  font-family: "M PLUS Rounded 1c", sans-serif;
}

.line-clamp-2 {
  display: -webkit-box; /* flexboxに代わるボックス表示 */
  -webkit-box-orient: vertical; /* 縦方向にボックスを展開 */
  overflow: hidden; /* はみ出した部分は非表示 */
  text-overflow: ellipsis; /* ...を表示 */
  -webkit-line-clamp: 2; /* 最大3行表示 */
  line-clamp: 2; /* 一部ブラウザのため */
}

/*
  react-markdown customs
*/

.prose > p {
  line-height: 1.5em;
  margin-top: 0em;
  margin-bottom: 2em;
}

.prose > blockquote > p {
  white-space: pre-wrap;
}

/* ブロッククォートの before スタイルを無効にする */
:where(.prose > blockquote > p):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  )::before {
  content: none;
}

/* ブロッククォートの after スタイルを無効にする */
:where(.prose > blockquote > p):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  )::after {
  content: none;
}

/* インラインコードブロックのスタイル */
.prose > p > code {
  @apply font-mono text-sm inline bg-gray-200 text-gray-800 rounded px-1 py-1 dark:bg-gray-700 dark:text-gray-200;
}

/* インラインコードブロックの before スタイルを無効にする */
:where(.prose > p > code):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  )::before {
  content: none;
}

/* インラインコードブロックの after スタイルを無効にする */
:where(.prose > p > code):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  )::after {
  content: none;
}

/* コードブロック内のトークンスタイルを無効にする */
.prose pre code span.token {
  background: unset !important;
}

::-webkit-scrollbar {
  width: 6px; /* 縦スクロールバーの幅 */
  height: 6px; /* 横スクロールバーの高さ */
}

::-webkit-scrollbar-track {
  background: transparent; /* スクロールバーの背景色を変更 */
}

::-webkit-scrollbar-thumb {
  background-color: #c0c0c0; /* スクロールバーのつまみ部分の色 */
  border-radius: 4px;
  border: none;
}
