name: Docker Build on Project Changes

on:
  push:
    # branches:
    # - main

jobs:
  docker-build-if-changes-detected:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # 最新の2つのコミットをフェッチ

      - name: Get changed directories
        id: get_changed_dirs
        run: |
          # 最新のコミットとその1つ前のコミットの差分を取得
          git diff --name-only HEAD HEAD~1 | \
          # 変更されたファイルがどのプロジェクトに属するかを確認
          grep '^projects/' | \
          awk -F/ '{print $2}' | \
          sort -u > changed_projects.txt

      - name: Check for Dockerfile changes
        id: check_dockerfiles
        run: |
          # 変更されたプロジェクトを確認し、Dockerfile が存在するかチェック
          BUILD_PROJECT=""
          while read -r project; do
            if [[ -f "projects/$project/Dockerfile" ]]; then
              echo "Dockerfile found in $project"
              if [ -z "$BUILD_PROJECT" ]; then
                BUILD_PROJECT="$project"
              else
                BUILD_PROJECT="$BUILD_PROJECT,$project"
              fi
            fi
          done < changed_projects.txt
          echo "BUILD_PROJECT: $BUILD_PROJECT"
          echo "BUILD_PROJECT=$BUILD_PROJECT" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        if: env.BUILD_PROJECT != ''
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PRIVATE_REPO_TOKEN }}

      - name: Build Docker Image
        if: env.BUILD_PROJECT != ''
        run: |
          IFS=',' read -ra BUILD_PROJECT_ARRAY <<< "${{ env.BUILD_PROJECT }}"
          echo "Build project count: ${#BUILD_PROJECT_ARRAY[@]}"

          for project in "${BUILD_PROJECT_ARRAY[@]}"; do
            # ビルドする Docker イメージの URI を作成
            GHCR_URI=ghcr.io/${{ github.repository }}/$project:latest

            # 変更があったプロジェクトの Dockerfile を元に Docker イメージをビルド
            echo "docker build -t $GHCR_URI projects/$project"
            docker build -t $GHCR_URI projects/$project
          done

      - name: Get Docker Image Size
        if: env.BUILD_PROJECT != ''
        run: |
          docker images
          IFS=',' read -ra BUILD_PROJECT_ARRAY <<< "${{ env.BUILD_PROJECT }}"

          for project in "${BUILD_PROJECT_ARRAY[@]}"; do
            # ビルドした Docker イメージの URI を取得
            GHCR_URI=ghcr.io/${{ github.repository }}/$project:latest

            # ビルドしたイメージの ID を取得
            IMAGE_ID=$(docker images -q $GHCR_URI)
            if [ -z "$IMAGE_ID" ]; then
              echo "Error: Docker image not found."
              exit 1
            fi

            # イメージのサイズを MB 単位で計算して出力
            IMAGE_SIZE_MB=$(echo "scale=2; $IMAGE_SIZE / 1024 / 1024" | bc)
            echo "Image size: $IMAGE_SIZE_MB MB"
          done

      # - name: Push Docker image
      #   if: env.BUILD_PROJECT != ''
      #   run: |
      #     docker push ${{ env.GHCR_URI }}
