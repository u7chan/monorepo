name: Docker Build on Project Changes

on:
  push:
    # branches:
    # - main

jobs:
  docker-build-if-changes-detected:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # 最新の2つのコミットをフェッチ

      - name: Get changed directories
        id: get_changed_dirs
        run: |
          # 最新のコミットとその1つ前のコミットの差分を取得
          git diff --name-only HEAD HEAD~1 | \
          # 変更されたファイルがどのプロジェクトに属するかを確認
          grep '^projects/' | \
          awk -F/ '{print $2}' | \
          sort -u > changed_projects.txt

      - name: Check for Dockerfile changes
        id: check_dockerfiles
        run: |
          # 変更されたプロジェクトを確認し、Dockerfile が存在するかチェック
          BUILD_PROJECT=""
          while read -r project; do
            if [[ -f "projects/$project/Dockerfile" ]]; then
              echo "Dockerfile found in $project"
              if [ -z "$BUILD_PROJECT" ]; then
                BUILD_PROJECT="$project"
              else
                BUILD_PROJECT="$BUILD_PROJECT,$project"
              fi
            fi
          done < changed_projects.txt
          echo "BUILD_PROJECT: $BUILD_PROJECT"
          echo "BUILD_PROJECT=$BUILD_PROJECT" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        if: env.BUILD_PROJECT != ''
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PRIVATE_REPO_TOKEN }}

      # - name: Build Docker Image
      #   if: env.BUILD_PROJECT != ''
      #   run: |
      #     # ビルドする Docker イメージの URI を作成
      #     GHCR_URI=ghcr.io/${{ github.repository }}/${{ env.BUILD_PROJECT }}:latest

      #     # 後続のステップで利用できるように、環境変数に GHCR_URI を追加
      #     echo "GHCR_URI=$GHCR_URI" >> $GITHUB_ENV

      #     # 変更があったプロジェクトの Dockerfile を元に Docker イメージをビルド
      #     docker build -t $GHCR_URI projects/${{ env.BUILD_PROJECT }}

      # - name: Get Docker Image Size
      #   if: env.BUILD_PROJECT != ''
      #   run: |
      #     # ビルドした Docker イメージの URI を出力
      #     echo "GHCR_URI: ${{ env.GHCR_URI }}"

      #     # ビルドしたイメージの ID を取得
      #     IMAGE_ID=$(docker images -q ${{ env.GHCR_URI }})
      #     if [ -z "$IMAGE_ID" ]; then
      #       echo "Error: Docker image not found."
      #       exit 1
      #     fi

      #     # イメージのサイズを MB 単位で計算して出力
      #     IMAGE_SIZE_MB=$(echo "scale=2; $IMAGE_SIZE / 1024 / 1024" | bc)
      #     echo "Image size: $IMAGE_SIZE_MB MB"

      # - name: Push Docker image
      #   if: env.BUILD_PROJECT != ''
      #   run: |
      #     docker push ${{ env.GHCR_URI }}
